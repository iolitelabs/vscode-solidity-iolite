{
  "name": "solidity",
  "description": "Ethereum Solidity Language for Visual Studio Code",
  "keywords": [
    "solidity",
    "ethereum",
    "blockchain",
    "compiler",
    "solhint"
  ],
  "version": "0.0.43",
  "publisher": "JuanBlanco",
  "engines": {
    "vscode": "^1.21.0"
  },
  "contributors": [
    "Juan Blanco"
  ],
  "bugs": {
    "url": "https://github.com/juanfranblanco/vscode-solidity/issues"
  },
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/juanfranblanco/vscode-solidity"
  },
  "categories": [
    "Languages",
    "Snippets"
  ],
  "activationEvents": [
    "onLanguage:solidity",
    "onCommand:solidity.compile",
    "onCommand:solidity.compile.active",
    "onCommand:solidity.codegen",
    "onCommand:solidity.codegenCSharpProject",
    "onCommand:solidity.codegenVbNetProject",
    "onCommand:solidity.codegenFSharpProject",
    "onCommand:solidity.fixDocument"
  ],
  "main": "./out/src/extension",
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "electron-rebuild": "./node_modules/.bin/electron-rebuild -v 1.7.12"
  },
  "dependencies": {
    "abi-code-gen": "0.0.3",
    "aes-js": "^3.1.0",
    "ajv": "^5.0.0",
    "fs-extra": "^4.0.3",
    "iolite-web3": "file:../iolite-web3",
    "iolite-provider": "file:../iolite-provider",
    "read-yaml": "^1.1.0",
    "rlp": "^2.0.0",
    "solc": "^0.4.23",
    "solhint": "^1.1.10",
    "solium": "^1.1.7",
    "solparse": "^2.2.5",
    "truffle-artifactor": "^2.1.4",
    "vscode-languageclient": "^4.0.0",
    "vscode-languageserver": "^4.0.0",
    "vscode-uri": "^1.0.3",
    "web3": "1.0.0-beta.29"
  },
  "devDependencies": {
    "@types/node": "^9.6.1",
    "electron-rebuild": "^1.6.0",
    "tslint": "^5.9.1",
    "typescript": "^2.8.3",
    "vscode": "^1.1.16"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Solidity configuration",
      "properties": {
        "solidity.network": {
          "type": [
            "object"
          ],
          "default": {
            "privateKey": "",
            "address": ""
          },
          "description": "Network settings"
        },
        "solidity.compileUsingRemoteVersion": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Compile using a remote version instead of the current one, for example: 'latest' or 'v0.4.3+commit.2353da71'"
        },
        "solidity.compileUsingLocalVersion": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Compile using a local version instead of the current one, for example: 'C://v0.4.3+commit.2353da71.js'"
        },
        "solidity.linter": {
          "type": [
            "boolean",
            "string"
          ],
          "default": "solium",
          "description": "Enables solhint linting. Possible options 'solhint' and 'solium'"
        },
        "solidity.solhintRules": {
          "type": [
            "object"
          ],
          "default": null,
          "description": "Solhint linting validation rules"
        },
        "solidity.enabledSolium": {
          "type": [
            "boolean"
          ],
          "default": false,
          "description": "Enables solium linting. DEPRECATED: Use \"linter\" instead"
        },
        "solidity.soliumRules": {
          "type": [
            "object"
          ],
          "default": {
            "imports-on-top": 0,
            "variable-declarations": 0,
            "indentation": [
              "error",
              4
            ],
            "quotes": [
              "error",
              "double"
            ]
          },
          "description": "Solium linting validation rules"
        },
        "solidity.enabledAsYouTypeCompilationErrorCheck": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Enables as you type compilation of the document and error highlighting"
        },
        "solidity.validationDelay": {
          "type": [
            "number"
          ],
          "default": 1500,
          "description": "Delay to trigger the validation of the changes of the current document (compilation, solium)"
        },
        "solidity.packageDefaultDependenciesDirectory": {
          "type": [
            "string"
          ],
          "default": "node_modules",
          "description": "Default directory for Packages Dependencies, i.e: 'node_modules', 'lib'"
        },
        "solidity.packageDefaultDependenciesContractsDirectory": {
          "type": [
            "string"
          ],
          "default": "contracts",
          "description": "Default directory where the Package Dependency store its contracts, i.e: 'src', 'contracts', or just a blank string ''"
        }
      }
    },
    "languages": [
      {
        "id": "solidity",
        "aliases": [
          "Solidity",
          "solidity"
        ],
        "extensions": [
          ".sol"
        ],
        "configuration": "./solidity.configuration.json"
      }
    ],
    "commands": [
      {
        "command": "solidity.compile",
        "title": "Solidity: Compile All Solidity Contracts"
      },
      {
        "command": "solidity.compile.active",
        "title": "Solidity: Compile Current Solidity Contract"
      },
      {
        "command": "solidity.codegen",
        "title": "Solidity: Code generate from compilation output 'contract.json'"
      },
      {
        "command": "solidity.network.deployContract",
        "title": "Solidity: Deploy Current Solidity Contract"
      },
      {
        "command": "solidity.network.deployContractWithMetadata",
        "title": "Solidity: Deploy Current Solidity Contract Supplying Metalimit"
      },
      {
        "command": "solidity.network.getBalance",
        "title": "Solidity: Get Balance of Current Wallet"
      },
      {
        "command": "solidity.network.callMethod",
        "title": "Solidity: Call Current Method"
      },
      {
        "command": "solidity.codegenCSharpProject",
        "title": "Solidity: Code generate CSharp Project from compilation output 'contract.json'"
      },
      {
        "command": "solidity.codegenVbNetProject",
        "title": "Solidity: Code generate VB.Net Project from compilation output 'contract.json'"
      },
      {
        "command": "solidity.codegenFSharpProject",
        "title": "Solidity: Code generate FSharp Project from compilation output 'contract.json'"
      },
      {
        "command": "solidity.fixDocument",
        "title": "Solidity: Fix document rules using Solium"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "solidity.network.getBalance",
          "when": "editorTextFocus && editorLangId == 'solidity'",
          "group": "navigation"
        },
        {
          "command": "solidity.network.deployContract",
          "when": "editorTextFocus && editorLangId == 'solidity'",
          "group": "navigation"
        },
        {
          "command": "solidity.network.deployContractWithMetadata",
          "when": "editorTextFocus && editorLangId == 'solidity'",
          "group": "navigation"
        },
        {
          "command": "solidity.network.callMethod",
          "when": "editorTextFocus && editorLangId == 'solidity'",
          "group": "navigation"
        }
      ]
    },
    "keybindings": [
      {
        "command": "solidity.compile.active",
        "key": "f5",
        "mac": "f5",
        "when": "editorTextFocus && editorLangId == 'solidity'"
      },
      {
        "command": "solidity.compile",
        "key": "Ctrl+f5",
        "mac": "Cmd+f5",
        "when": "editorTextFocus && editorLangId == 'solidity'"
      }
    ],
    "snippets": [
      {
        "language": "solidity",
        "path": "./snippets/solidity.json"
      }
    ],
    "grammars": [
      {
        "language": "solidity",
        "scopeName": "source.solidity",
        "path": "./syntaxes/solidity.json"
      }
    ]
  }
}
